name: TruthLens v5 Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'truthlens_core.py'
      - 'causal_parser.py'
      - 'truthgraph_builder.py'
      - 'domain_adapter.py'
      - 'truthlens_validator.py'
      - 'truth_index_v*.yml'
      - 'tests/test_truthlens_*.py'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  validate:
    name: Validate TruthLens (v5 Repro Standard)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest numpy pyyaml
      
      - name: Run TruthLens test suite (v1-v5)
        run: |
          pytest tests/test_truthlens_v*.py -v --tb=short
      
      - name: Run reproducibility validator (quick)
        run: |
          python3 truthlens_validator.py quick --output validation_report_ci.json
      
      - name: Check validation report
        run: |
          python3 - <<'PYEOF'
          import json
          
          report = json.load(open('validation_report_ci.json'))
          
          print("\n" + "="*70)
          print("📊 CI Validation Results")
          print("="*70)
          
          repro = report['reproducibility']
          perf = report['performance']
          overall = report['overall']
          
          print(f"\nReproducibility: {repro['reproducibility_pct']:.2f}%")
          print(f"  Status: {'✅ PASS' if repro['passes'] else '❌ FAIL'}")
          
          print(f"\nPerformance: {perf['mean_runtime']:.3f}s/doc")
          print(f"  Status: {'✅ PASS' if perf['passes'] else '❌ FAIL'}")
          
          print(f"\nOverall: {'✅ PASS' if overall['passes_all'] else '❌ FAIL'}")
          print("="*70 + "\n")
          
          if not overall['passes_all']:
              print("❌ VALIDATION FAILED")
              exit(1)
          else:
              print("✅ VALIDATION PASSED")
          PYEOF
      
      - name: Upload validation report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: truthlens-validation-report
          path: validation_report_ci.json
      
      - name: Performance summary
        run: |
          echo "### TruthLens v5 Validation Results 🔬" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Result | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          
          python3 - <<'PYEOF'
          import json
          import os
          
          report = json.load(open('validation_report_ci.json'))
          repro = report['reproducibility']
          perf = report['performance']
          
          summary = os.environ['GITHUB_STEP_SUMMARY']
          
          with open(summary, 'a') as f:
              f.write(f"| Reproducibility | {repro['reproducibility_pct']:.2f}% | {'✅' if repro['passes'] else '❌'} |\n")
              f.write(f"| Runtime | {perf['mean_runtime']:.3f}s/doc | {'✅' if perf['passes'] else '❌'} |\n")
              f.write(f"| Overall | - | {'✅ PASS' if report['overall']['passes_all'] else '❌ FAIL'} |\n")
          PYEOF

